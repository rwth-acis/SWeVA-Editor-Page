{
    "type": "module",
    "name": "mobsos_failures",
    "description": "Retrieves failure data from MobSOS.",
    "dataInNames": [
        "startDate",
        "endDate"
    ],
    "dataInSchema": {},
    "dataOutNames": [
        "result"
    ],
    "dataOutSchema": {},
    "inputNames": [
        "granularity",
        "exclude404"
    ],
    "inputSchema": {},
    "request": [
        "function (data, input, libs) {",
        "",
        "var where = '';",
        "if(data.startDate > 0 && data.endDate > 0) {",
        "where = \"WHERE UNIX_TIMESTAMP(time) BETWEEN \" +",
        "data.startDate + \" AND \" + data.endDate + \" \";",
        "}",
        "",
        "var groupByDate = '%y-%m-%d-%H';",
        "",
        "",
        "if (input.granularity == \"month\") {",
        "groupByDate = '%y-%m';",
        "}",
        "else if (input.granularity == \"day\") {",
        "groupByDate = '%y-%m-%d';",
        "}",
        "",
        "",
        "var excludeError =\"\";",
        "if(input.exclude404){",
        "excludeError = \" or status = 404 \";",
        "}",
        "var query = \"select  UNIX_TIMESTAMP(time) as t, sum(case when (status < 399\"+excludeError+\") then 0 else 1 end)/count(*) as failures \"+",
        "\"from log \"+",
        "where +",
        "\"group by DATE_FORMAT(time, '\" + groupByDate + \"') \"+",
        "\"ORDER BY t ASC\";",
        "return libs.axios.post('https://api.learning-layers.eu/mobsos-qv/QVS/query/visualize?access_token=a&format=JSON',",
        "{",
        "\"query\": query,",
        "\"queryparams\":new Array(),",
        "\"dbkey\":\"Layers Box\",",
        "\"cache\":false,",
        "\"modtypei\":0,",
        "\"title\":\"Overall Use - Timeline\",",
        "\"width\":\"500\",",
        "\"height\":\"300\"",
        "});",
        "}    "
    ],
    "response": [
        "function (response, input, libs) {",
        "",
        "var data = new Array();",
        "response.data.forEach(function(element, i) {",
        "if (i<2) {",
        "return;",
        "}",
        "var time = libs.get(element, 0);",
        "libs.set(element, 0, (time)*1000);",
        "data.push(element);",
        "});",
        "",
        "",
        "return {result: response.data.slice(2)};",
        "}"
    ]
}